/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import clases.paquete;
import clases.señalCliente;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Alan
 */
public class ventanaChat extends javax.swing.JFrame {

    private String Nick,ipServer;
    private InetAddress address;
    public static HashMap <String,String> lista;
    public HashMap <String,chatIndividual> listaVentatasChats;

    public String getIpServer() {
        return ipServer;
    }

    public void setIpServer(String ipServer) {
        this.ipServer = ipServer;
    }

    public HashMap<String, String> getLista() {
        return lista;
    }

    public void setLista(HashMap<String, String> lista) {
        this.lista = lista;
    }

    public String getNick() {
        return Nick;
    }

    public void setNick(String Nick) {
        this.Nick = Nick;
    }

    /**
     * Creates new form ventanaChat
     */
    public ventanaChat() {
        initComponents();
        señalCliente señal2 = new señalCliente(this);
        señal2.start();   
        this.enviarMsg.requestFocus();
    }

    public ventanaChat(String nick,String ipservidor) {
        this.Nick = nick;
        this.ipServer = ipservidor;
        initComponents();
        señalCliente señal2 = new señalCliente(this);
        señal2.start();
        lista = new HashMap<>();
        this.setTitle("Bienvenido a CoffeeChat - "+ nick);
        this.enviarMsg.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoChat = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaChatConectados = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        enviarMsg = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        campoChat.setEditable(false);
        campoChat.setColumns(20);
        campoChat.setRows(5);
        jScrollPane1.setViewportView(campoChat);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        listaChatConectados.setBorder(javax.swing.BorderFactory.createTitledBorder("Conectados"));
        listaChatConectados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaChatConectadosMouseClicked(evt);
            }
        });
        listaChatConectados.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaChatConectadosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaChatConectados);

        enviarMsg.setColumns(20);
        enviarMsg.setRows(1);
        jScrollPane3.setViewportView(enviarMsg);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(10, 10, 10))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane3))
                        .addGap(10, 10, 10))))
        );
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setText("Archivos");

        jMenuItem1.setText("Desconectarse");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        setSize(new java.awt.Dimension(684, 472));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.listaVentatasChats = new HashMap<>();
        paquete enviar;
        try {
            Socket conexion = new Socket(ipServer, 9999);
            ObjectOutputStream enviarPaquete = new ObjectOutputStream(conexion.getOutputStream());
            enviar = new paquete(this.Nick, "Conectado");
            enviarPaquete.writeObject(enviar);
            //campoChat.append(this.getNick() + " : Conectado \n");
            enviarPaquete.close();
            conexion.close();
        } catch (IOException ex) {
            Logger.getLogger(ventanaChat.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            Socket conexion = new Socket(ipServer, 9999);
            ObjectOutputStream enviarPaquete = new ObjectOutputStream(conexion.getOutputStream());
            
            paquete enviar = new paquete();
            enviar.setNick(this.getNick());
            enviar.setMsg(this.enviarMsg.getText());
            enviar.setDescripcion("ChatGrupal");
            
            enviarPaquete.writeObject(enviar);
            enviarPaquete.close();
            conexion.close();
            this.enviarMsg.setText("");
        } catch (IOException ex) {
            Logger.getLogger(ventanaChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listaChatConectadosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaChatConectadosValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listaChatConectadosValueChanged

    private void listaChatConectadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaChatConectadosMouseClicked
        // TODO add your handling code here:
        String selected = listaChatConectados.getSelectedValue().toString();
        try{
            if(this.listaVentatasChats.containsKey(this.getNick()+"-"+selected)){
                chatIndividual chat = this.listaVentatasChats.get(this.getNick()+"-"+selected);
                chat.setVisible(true);
                return;
            }
            if(this.listaVentatasChats.containsKey(selected + "-"+ this.getNick())){
                chatIndividual chat = this.listaVentatasChats.get(selected + "-"+ this.getNick());
                chat.setVisible(true);
                return;
            }               
            chatIndividual chat = new chatIndividual(this.Nick,selected, lista.get(selected));
            chat.setIpServer(ipServer);
            chat.setId(this.getNick()+"-"+selected);
            chat.setParent(this);
            chat.show();
            this.listaVentatasChats.put(this.getNick()+"-"+selected, chat);            
        } catch(Exception e){
            e.getMessage();
        }
    }//GEN-LAST:event_listaChatConectadosMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "me voy");
        paquete enviar;
        try {
            Socket conexion = new Socket(ipServer, 9999);
            ObjectOutputStream enviarPaquete = new ObjectOutputStream(conexion.getOutputStream());
            enviar = new paquete(this.Nick, "Desconectado");
            enviarPaquete.writeObject(enviar);
            enviarPaquete.close();
            conexion.close();
        } catch (IOException ex) {
            Logger.getLogger(ventanaChat.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        paquete enviar;
        try {
            Socket conexion = new Socket(ipServer, 9999);
            ObjectOutputStream enviarPaquete = new ObjectOutputStream(conexion.getOutputStream());
            enviar = new paquete(this.Nick, "Desconectado");
            enviarPaquete.writeObject(enviar);
            enviarPaquete.close();
            conexion.close();
        } catch (IOException ex) {
            Logger.getLogger(ventanaChat.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            sesion nueva = new sesion();
            nueva.show();
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea campoChat;
    private javax.swing.JTextArea enviarMsg;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JList listaChatConectados;
    // End of variables declaration//GEN-END:variables
}